(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠼ idealTree:parser: sill idealTree buildDeps(⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:parser: sill idealTree buildDeps(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:parser: timing idealTree:#root Completed in 14(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠼ idealTree:parser: timing idealTree:#root Completed in 14(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:parser: timing idealTree:#root Completed in 14(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠋ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠹ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠹ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:nodemon: sill fetch manifest color-convert@^2.(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:istanbul-lib-instrument: sill fetch manifest m(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:istanbul-lib-instrument: sill fetch manifest m(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:istanbul-lib-instrument: sill fetch manifest m(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠼ idealTree:istanbul-lib-instrument: sill fetch manifest m(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:istanbul-lib-instrument: sill fetch manifest m(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠹ idealTree:istanbul-lib-instrument: sill fetch manifest m(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:jest-validate: sill placeDep ROOT resolve-from(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:jest-validate: sill placeDep ROOT resolve-from(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ idealTree:jest-validate: sill placeDep ROOT resolve-from(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠹ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠹ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:istanbul-lib-instrument: timing idealTree:node(###⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠋ idealTree:istanbul-lib-instrument: timing idealTree:node(#####⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:jest-validate: timing idealTree:node_modules/j(#####⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠏ idealTree:jest-validate: timing idealTree:node_modules/j(#####⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ idealTree:jest-validate: timing idealTree:node_modules/j(#####⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:jest-validate: timing idealTree:node_modules/j(######⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠴ idealTree:nodemon: timing idealTree:node_modules/nodemon(######⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:nodemon: timing idealTree:node_modules/nodemon(########⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ idealTree:pretty-format: timing idealTree:node_modules/p(########⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠧ idealTree:supports-color: sill placeDep ROOT has-flag@4.(########⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:ts-jest: timing idealTree:node_modules/ts-jest(########⠂⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ idealTree:ts-jest: timing idealTree:node_modules/ts-jest(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠋ idealTree: timing idealTree Completed in 4488ms(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ reify:fsevents: sill reify mark deleted [ '/workspace/pa(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠇ reify:fsevents: sill reify mark deleted [ '/workspace/pa(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ reify:fsevents: sill reify mark deleted [ '/workspace/pa(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠦ reify:fsevents: sill reify mark deleted [ '/workspace/pa(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ reify:fsevents: sill reify mark deleted [ '/workspace/pa(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ reify:fsevents: sill reify mark deleted [ '/workspace/pa(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ reify:fsevents: sill reify mark deleted [ '/workspace/pa(#########⠂⠂⠂⠂⠂⠂⠂⠂⠂) ⠸ reify:p-try: http fetch GET 200 https://registry.npmjs.o(##########⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ reify:ansi-regex: http fetch GET 200 https://registry.np(##########⠂⠂⠂⠂⠂⠂⠂⠂) ⠙ reify:glob-parent: http fetch GET 200 https://registry.n(###########⠂⠂⠂⠂⠂⠂⠂) ⠸ reify:@babel/plugin-syntax-typescript: http fetch GET 20(###########⠂⠂⠂⠂⠂⠂⠂) ⠋ reify:jest-leak-detector: http fetch GET 200 https://reg(###########⠂⠂⠂⠂⠂⠂⠂) ⠼ reify:@types/graceful-fs: http fetch GET 200 https://reg(############⠂⠂⠂⠂⠂⠂) ⠏ reify:@babel/plugin-syntax-logical-assignment-operators:(#############⠂⠂⠂⠂⠂) ⠙ reify:strip-final-newline: http fetch GET 200 https://re(#############⠂⠂⠂⠂⠂) ⠏ reify:pkg-dir: http fetch GET 200 https://registry.npmjsnpm WARN deprecated inflight@1.0.6: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
(##############⠂⠂⠂⠂) ⠼ reify:@types/yargs-parser: http fetch GET 200 https://re(##############⠂⠂⠂⠂) ⠹ reify:lru-cache: http fetch GET 200 https://registry.npm(##############⠂⠂⠂⠂) ⠴ reify:picocolors: http fetch GET 200 https://registry.np(##############⠂⠂⠂⠂) ⠴ reify:@types/istanbul-lib-coverage: http fetch GET 200 h(###############⠂⠂⠂) ⠇ reify:strip-ansi: http fetch GET 200 https://registry.np(###############⠂⠂⠂) ⠦ reify:ansi-escapes: http fetch GET 200 https://registry.npm WARN deprecated glob@7.2.3: Glob versions prior to v9 are no longer supported
(################⠂⠂) ⠸ reify:minimatch: timing reifyNode:node_modules/jest-work(################⠂⠂) ⠼ reify:has-flag: http fetch GET 200 https://registry.npmj(#################⠂) ⠴ reify:ajv-formats: timing reifyNode:node_modules/@babel/(#################⠂) ⠴ reify:type-fest: timing reifyNode:node_modules/fast-uri(#################⠂) ⠴ reify:type-fest: timing reifyNode:node_modules/fast-uri(#################⠂) ⠦ reify:semver: http fetch GET 200 https://registry.npmjs.(#################⠂) ⠏ reify:yargs: timing reifyNode:node_modules/nodemon/node_(##################) ⠙ reify:istanbul-reports: http fetch GET 200 https://regis(##################) ⠹ reify:istanbul-reports: http fetch GET 200 https://regis(##################) ⠏ reify:ts-jest: timing reifyNode:node_modules/async Compl(##################) ⠴ reify:ts-node: http fetch GET 200 https://registry.npmjs(##################) ⠙ reify:@babel/helpers: http fetch GET 200 https://registr(##################) ⠙ reify:@babel/helpers: http fetch GET 200 https://registr(##################) ⠸ reify:@babel/types: http fetch GET 200 https://registry.(##################) ⠸ reify:@babel/types: http fetch GET 200 https://registry.(##################) ⠴ reify:ajv: http fetch GET 200 https://registry.npmjs.org(##################) ⠴ reify:ajv: http fetch GET 200 https://registry.npmjs.org(##################) ⠧ reify:@types/lodash: http fetch GET 200 https://registry(##################) ⠧ reify:@types/lodash: http fetch GET 200 https://registry(##################) ⠙ reify:lodash: http fetch GET 200 https://registry.npmjs.(##################) ⠴ reify:typescript: http fetch GET 200 https://registry.np(##################) ⠏ reify:typescript: http fetch GET 200 https://registry.np(##################) ⠋ reify:typescript: http fetch GET 200 https://registry.np
added 320 packages, and audited 321 packages in 8s

38 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
